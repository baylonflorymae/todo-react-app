{"id":"../node_modules/paginator/index.js","dependencies":[{"name":"C:\\Users\\baylo\\Documents\\Practice\\Todo-List-App\\package.json","includedInParent":true,"mtime":1589544727949},{"name":"C:\\Users\\baylo\\Documents\\Practice\\Todo-List-App\\node_modules\\paginator\\package.json","includedInParent":true,"mtime":1589538950292}],"generated":{"js":"module.exports = Paginator;\n\n// Paginator constructor\n//\n// `per_page` is the number of results per page, `length` is the number of\n// pages to display. They default to `25` and `10` respectively.\nfunction Paginator(per_page, length) {\n  // You really should be calling this with `new Paginator`, but WHATEVER.\n  if (!(this instanceof Paginator)) {\n    return new Paginator(per_page, length);\n  }\n\n  // Woo, defaults!\n  this.per_page = per_page || 25;\n  this.length = length || 10;\n}\n\n// Build an object with all the necessary information for outputting pagination\n// controls.\n//\n// (new Paginator(paginator.build(100, 2)\nPaginator.prototype.build = function(total_results, current_page) {\n  // We want the number of pages, rounded up to the nearest page.\n  var total_pages = Math.ceil(total_results / this.per_page);\n\n  // Ensure both total_results and current_page are treated as Numbers\n  total_results = parseInt(total_results, 10);\n  current_page  = parseInt(current_page, 10) || 1;\n\n  // Obviously we can't be on a negative or 0 page.\n  if (current_page < 1) { current_page = 1; }\n  // If the user has done something like /page/99999 we want to clamp that back\n  // down.\n  if (current_page > total_pages) { current_page = total_pages; }\n\n  // This is the first page to be displayed as a numbered link.\n  var first_page = Math.max(1, current_page - Math.floor(this.length / 2));\n\n  // And here's the last page to be displayed specifically.\n  var last_page = Math.min(total_pages, current_page + Math.floor(this.length / 2));\n\n  // This is triggered if we're at or near one of the extremes; we won't have\n  // enough page links. We need to adjust our bounds accordingly.\n  if (last_page - first_page + 1 < this.length) {\n    if (current_page < (total_pages / 2)) {\n      last_page = Math.min(total_pages, last_page + (this.length - (last_page - first_page)));\n    } else {\n      first_page = Math.max(1, first_page - (this.length - (last_page - first_page)));\n    }\n  }\n\n  // This can be triggered if the user wants an odd number of pages.\n  if (last_page - first_page + 1 > this.length) {\n    // We want to move towards whatever extreme we're closest to at the time.\n    if (current_page > (total_pages / 2)) {\n      first_page++;\n    } else {\n      last_page--;\n    }\n  }\n\n  // First result on the page. This, along with the field below, can be used to\n  // do \"showing x to y of z results\" style things.\n  var first_result = this.per_page * (current_page - 1);\n  if (first_result < 0) { first_result = 0; }\n\n  // Last result on the page.\n  var last_result = (this.per_page * current_page) - 1;\n  if (last_result < 0) { last_result = 0; }\n  if (last_result > Math.max(total_results - 1, 0)) { last_result = Math.max(total_results - 1, 0); }\n\n  // GIMME THAT OBJECT\n  return {\n    total_pages: total_pages,\n    pages: Math.min(last_page - first_page + 1, total_pages),\n    current_page: current_page,\n    first_page: first_page,\n    last_page: last_page,\n    previous_page: current_page - 1,\n    next_page: current_page + 1,\n    has_previous_page: current_page > 1,\n    has_next_page: current_page < total_pages,\n    total_results: total_results,\n    results: Math.min(last_result - first_result + 1, total_results),\n    first_result: first_result,\n    last_result: last_result,\n  };\n};\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/paginator/index.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/paginator/index.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/paginator/index.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/paginator/index.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/paginator/index.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/paginator/index.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/paginator/index.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/paginator/index.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/paginator/index.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/paginator/index.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/paginator/index.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/paginator/index.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/paginator/index.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/paginator/index.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/paginator/index.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/paginator/index.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/paginator/index.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/paginator/index.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/paginator/index.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/paginator/index.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/paginator/index.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/paginator/index.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/paginator/index.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/paginator/index.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/paginator/index.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/paginator/index.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/paginator/index.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/paginator/index.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/paginator/index.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/paginator/index.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/paginator/index.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/paginator/index.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/paginator/index.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/paginator/index.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/paginator/index.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/paginator/index.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/paginator/index.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/paginator/index.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/paginator/index.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/paginator/index.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/paginator/index.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/paginator/index.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/paginator/index.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/paginator/index.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/paginator/index.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/paginator/index.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/paginator/index.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/paginator/index.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/paginator/index.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/paginator/index.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/paginator/index.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/paginator/index.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/paginator/index.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/paginator/index.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/paginator/index.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/paginator/index.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/paginator/index.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"../node_modules/paginator/index.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"../node_modules/paginator/index.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"../node_modules/paginator/index.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"../node_modules/paginator/index.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"../node_modules/paginator/index.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"../node_modules/paginator/index.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"../node_modules/paginator/index.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"../node_modules/paginator/index.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"../node_modules/paginator/index.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"../node_modules/paginator/index.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"../node_modules/paginator/index.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"../node_modules/paginator/index.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"../node_modules/paginator/index.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"../node_modules/paginator/index.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"../node_modules/paginator/index.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"../node_modules/paginator/index.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"../node_modules/paginator/index.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"../node_modules/paginator/index.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"../node_modules/paginator/index.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"../node_modules/paginator/index.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"../node_modules/paginator/index.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"../node_modules/paginator/index.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"../node_modules/paginator/index.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"../node_modules/paginator/index.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"../node_modules/paginator/index.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"../node_modules/paginator/index.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"../node_modules/paginator/index.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"../node_modules/paginator/index.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"../node_modules/paginator/index.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"../node_modules/paginator/index.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"../node_modules/paginator/index.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"../node_modules/paginator/index.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}}],"sources":{"../node_modules/paginator/index.js":"module.exports = Paginator;\n\n// Paginator constructor\n//\n// `per_page` is the number of results per page, `length` is the number of\n// pages to display. They default to `25` and `10` respectively.\nfunction Paginator(per_page, length) {\n  // You really should be calling this with `new Paginator`, but WHATEVER.\n  if (!(this instanceof Paginator)) {\n    return new Paginator(per_page, length);\n  }\n\n  // Woo, defaults!\n  this.per_page = per_page || 25;\n  this.length = length || 10;\n}\n\n// Build an object with all the necessary information for outputting pagination\n// controls.\n//\n// (new Paginator(paginator.build(100, 2)\nPaginator.prototype.build = function(total_results, current_page) {\n  // We want the number of pages, rounded up to the nearest page.\n  var total_pages = Math.ceil(total_results / this.per_page);\n\n  // Ensure both total_results and current_page are treated as Numbers\n  total_results = parseInt(total_results, 10);\n  current_page  = parseInt(current_page, 10) || 1;\n\n  // Obviously we can't be on a negative or 0 page.\n  if (current_page < 1) { current_page = 1; }\n  // If the user has done something like /page/99999 we want to clamp that back\n  // down.\n  if (current_page > total_pages) { current_page = total_pages; }\n\n  // This is the first page to be displayed as a numbered link.\n  var first_page = Math.max(1, current_page - Math.floor(this.length / 2));\n\n  // And here's the last page to be displayed specifically.\n  var last_page = Math.min(total_pages, current_page + Math.floor(this.length / 2));\n\n  // This is triggered if we're at or near one of the extremes; we won't have\n  // enough page links. We need to adjust our bounds accordingly.\n  if (last_page - first_page + 1 < this.length) {\n    if (current_page < (total_pages / 2)) {\n      last_page = Math.min(total_pages, last_page + (this.length - (last_page - first_page)));\n    } else {\n      first_page = Math.max(1, first_page - (this.length - (last_page - first_page)));\n    }\n  }\n\n  // This can be triggered if the user wants an odd number of pages.\n  if (last_page - first_page + 1 > this.length) {\n    // We want to move towards whatever extreme we're closest to at the time.\n    if (current_page > (total_pages / 2)) {\n      first_page++;\n    } else {\n      last_page--;\n    }\n  }\n\n  // First result on the page. This, along with the field below, can be used to\n  // do \"showing x to y of z results\" style things.\n  var first_result = this.per_page * (current_page - 1);\n  if (first_result < 0) { first_result = 0; }\n\n  // Last result on the page.\n  var last_result = (this.per_page * current_page) - 1;\n  if (last_result < 0) { last_result = 0; }\n  if (last_result > Math.max(total_results - 1, 0)) { last_result = Math.max(total_results - 1, 0); }\n\n  // GIMME THAT OBJECT\n  return {\n    total_pages: total_pages,\n    pages: Math.min(last_page - first_page + 1, total_pages),\n    current_page: current_page,\n    first_page: first_page,\n    last_page: last_page,\n    previous_page: current_page - 1,\n    next_page: current_page + 1,\n    has_previous_page: current_page > 1,\n    has_next_page: current_page < total_pages,\n    total_results: total_results,\n    results: Math.min(last_result - first_result + 1, total_results),\n    first_result: first_result,\n    last_result: last_result,\n  };\n};\n"},"lineCount":89}},"error":null,"hash":"4d6dc3541b688ae566af6c1bc55e6bcc","cacheData":{"env":{}}}